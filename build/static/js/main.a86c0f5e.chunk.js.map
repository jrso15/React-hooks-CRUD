{"version":3,"sources":["components/Orders.js","OrderDetails.js","components/AddOrderForm.js","components/EditOrderForm.js","components/AddOrder.js","App.js","serviceWorker.js","index.js"],"names":["Orders","className","orders","map","item","i","key","id","productName","quantity","unitPrice","totalPrice","status","dateOrdered","eta","Component","OrderDetails","props","length","order","orderedDate","onClick","editRow","deleteOrder","AddOrderForm","initialFormState","useState","setOrders","handleInputChange","event","target","name","value","onSubmit","preventDefault","addOrder","type","onChange","EditOrderForm","currentOrder","useEffect","updateOrder","setEditing","AddOrder","today","Date","date","getFullYear","getMonth","getDate","ordersData","editing","setCurrentOrder","updatedOrder","filter","App","state","title","headerLinks","path","home","subTitle","text","create","Container","fluid","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","to","component","exact","React","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kxCA0CeA,E,uKApCb,OACC,6BACC,8BACU,wBAAIC,UAAU,SAAd,iBACA,yBAAKA,UAAU,eACb,yBAAKA,UAAU,eAAf,QACA,yBAAKA,UAAU,eAAf,cACA,yBAAKA,UAAU,eAAf,cACA,yBAAKA,UAAU,eAAf,gBACA,yBAAKA,UAAU,eAAf,iBACA,yBAAKA,UAAU,eAAf,YACA,yBAAKA,UAAU,eAAf,kBACA,yBAAKA,UAAU,eAAf,wBAGFC,EAAOC,KAAI,SAACC,EAAMC,GAC1B,OACC,yBAAKC,IAAKD,EAAGJ,UAAU,oBACtB,yBAAKA,UAAU,cAAf,IAA8BG,EAAKG,GAAnC,KACA,yBAAKN,UAAU,cAAf,IAA8BG,EAAKI,YAAnC,KACA,yBAAKP,UAAU,cAAf,IAA8BG,EAAKK,SAAnC,KACA,yBAAKR,UAAU,cAAf,QAAkCG,EAAKM,UAAvC,KACA,yBAAKT,UAAU,cAAf,QAAkCG,EAAKO,WAAvC,KACA,yBAAKV,UAAU,cAAf,IAA8BG,EAAKQ,OAAnC,KACA,yBAAKX,UAAU,cAAf,IAA8BG,EAAKS,YAAnC,KACA,yBAAKZ,UAAU,cAAf,IAA8BG,EAAKU,IAAnC,e,GA3BaC,a,gBCkDNC,EApDM,SAACC,GAAD,OACnB,+BACE,+BACE,4BACE,4CACA,wCACA,2CACA,4CACA,wCACA,6CACA,qCACA,yCAGJ,+BACGA,EAAMf,OAAOgB,OAAS,EACrBD,EAAMf,OAAOC,KAAI,SAACgB,GAAD,OACf,wBAAIb,IAAKa,EAAMZ,IACb,4BAAKY,EAAMX,aACX,4BAAKW,EAAMV,UACX,4BAAKU,EAAMT,WACX,4BAAKS,EAAMR,YACX,4BAAKQ,EAAMP,OAAX,KACA,4BAAKO,EAAMC,aACX,4BAAKD,EAAML,IAAX,KACA,4BACE,4BACEO,QAAS,WACPJ,EAAMK,QAAQH,IAEhBlB,UAAU,oBAJZ,QAQA,4BACEoB,QAAS,kBAAMJ,EAAMM,YAAYJ,EAAMZ,KACvCN,UAAU,oBAFZ,eAUN,4BACE,6C,gBCgCKuB,EA7EM,SAACP,GACpB,IAAMQ,EAAmB,CAAElB,GAAI,KAAMC,YAAa,GAAIC,SAAU,GAAIC,UAAW,GAAIC,WAAY,GAAIC,OAAQ,aAAcQ,YAAa,GAAIN,IAAK,IADjH,EAEHY,mBAASD,GAFN,mBAEvBN,EAFuB,KAEhBQ,EAFgB,KAIxBC,EAAoB,SAACC,GAAW,IAAD,EACXA,EAAMC,OAAtBC,EAD2B,EAC3BA,KAAMC,EADqB,EACrBA,MAEdL,EAAU,eAAKR,EAAN,eAAcY,EAAOC,MAGhC,OACE,0BACEC,SAAU,SAACJ,GACTA,EAAMK,iBACDf,EAAMX,aAAgBW,EAAMV,UAAaU,EAAMT,WAAcS,EAAMR,YAAeQ,EAAML,MAE7FG,EAAMkB,SAAShB,GACfQ,EAAUF,MAGZ,+CACA,2BACExB,UAAU,QACVmC,KAAK,OACLL,KAAK,cACLC,MAAOb,EAAMX,YACb6B,SAAUT,IAEZ,2CACA,2BACE3B,UAAU,QACVmC,KAAK,OACLL,KAAK,WACLC,MAAOb,EAAMV,SACb4B,SAAUT,IAGZ,6CACA,2BACE3B,UAAU,QACVmC,KAAK,OACLL,KAAK,YACLC,MAAOb,EAAMT,UACb2B,SAAUT,IAGZ,8CACA,2BACE3B,UAAU,QACVmC,KAAK,OACLL,KAAK,aACLC,MAAOb,EAAMR,WACb0B,SAAUT,IAGZ,+CACA,2BACE3B,UAAU,QACVmC,KAAK,OACLL,KAAK,cACLC,MAAOb,EAAMC,YACbiB,SAAUT,IAGZ,oDACA,2BACE3B,UAAU,QACVmC,KAAK,OACLL,KAAK,MACLC,MAAOb,EAAML,IACbuB,SAAUT,IAEZ,4BAAQ3B,UAAU,aAAlB,eCsBSqC,EA9FO,SAACrB,GAAW,IAAD,EACJS,mBAAST,EAAMsB,cADX,mBACxBpB,EADwB,KACjBQ,EADiB,KAGzBC,EAAoB,SAACC,GAAW,IAAD,EACXA,EAAMC,OAAtBC,EAD2B,EAC3BA,KAAMC,EADqB,EACrBA,MAEdL,EAAU,eAAKR,EAAN,eAAcY,EAAOC,MAOhC,OAJAQ,qBAAU,WACRb,EAAUV,EAAMsB,gBACf,CAACtB,IAGF,0BACEgB,SAAU,SAACJ,GACTA,EAAMK,iBAENjB,EAAMwB,YAAYtB,EAAMZ,GAAIY,KAG9B,+CACA,2BACElB,UAAU,QACVmC,KAAK,OACLL,KAAK,cACLC,MAAOb,EAAMX,YACb6B,SAAUT,IAEZ,2CACA,2BACE3B,UAAU,QACVmC,KAAK,OACLL,KAAK,WACLC,MAAOb,EAAMV,SACb4B,SAAUT,IAGZ,6CACA,2BACE3B,UAAU,QACVmC,KAAK,OACLL,KAAK,YACLC,MAAOb,EAAMT,UACb2B,SAAUT,IAGZ,8CACA,2BACE3B,UAAU,QACVmC,KAAK,OACLL,KAAK,aACLC,MAAOb,EAAMR,WACb0B,SAAUT,IAGZ,yCACA,2BACE3B,UAAU,QACVmC,KAAK,OACLL,KAAK,SACLC,MAAOb,EAAMP,OACbyB,SAAUT,IAGZ,+CACA,2BACE3B,UAAU,QACVmC,KAAK,OACLL,KAAK,cACLC,MAAOb,EAAMC,YACbiB,SAAUT,IAGZ,oDACA,2BACE3B,UAAU,QACVmC,KAAK,OACLL,KAAK,MACLC,MAAOb,EAAML,IACbuB,SAAUT,IAGZ,4BAAQ3B,UAAU,cAAlB,gBACA,4BACEoB,QAAS,kBAAMJ,EAAMyB,YAAW,IAChCzC,UAAU,2BAFZ,YCPS0C,EA1EE,WAEf,IAAIC,EAAQ,IAAIC,KACZC,EAAOF,EAAMG,cAAgB,KAAOH,EAAMI,WAAa,GAAK,IAAMJ,EAAMK,UAEtEC,EAAa,CACjB,CAAE3C,GAAI,EAAGC,YAAa,QAASC,SAAU,IAAKC,UAAW,WAAYC,WAAY,WAAYC,OAAQ,aAAcQ,YAAa0B,EAAMhC,IAAK,aAC3I,CAAEP,GAAI,EAAGC,YAAa,SAAUC,SAAU,IAAKC,UAAW,WAAYC,WAAY,WAAYC,OAAQ,aAAcQ,YAAa0B,EAAMhC,IAAK,aAC5I,CAAEP,GAAI,EAAGC,YAAa,UAAWC,SAAU,KAAMC,UAAW,WAAYC,WAAY,WAAYC,OAAQ,aAAcQ,YAAa0B,EAAMhC,IAAK,aAC9I,CAAEP,GAAI,EAAGC,YAAa,QAASC,SAAU,IAAKC,UAAW,WAAYC,WAAY,WAAYC,OAAQ,aAAcQ,YAAa0B,EAAMhC,IAAK,aAC3I,CAAEP,GAAI,EAAGC,YAAa,SAAUC,SAAU,IAAKC,UAAW,WAAYC,WAAY,WAAYC,OAAQ,aAAcQ,YAAa0B,EAAMhC,IAAK,aAC5I,CAAEP,GAAI,EAAGC,YAAa,UAAWC,SAAU,KAAMC,UAAW,WAAYC,WAAY,WAAYC,OAAQ,aAAcQ,YAAa0B,EAAMhC,IAAK,cAX3H,EAcOY,mBAASwB,GAdhB,mBAcdhD,EAdc,KAcNyB,EAdM,OAyBSD,oBAAS,GAzBlB,mBAyBdyB,EAzBc,KAyBLT,EAzBK,KA0BfjB,EAAmB,CAAElB,GAAI,KAAMC,YAAa,GAAIC,SAAU,GAAIC,UAAW,GAAIC,WAAY,GAAIC,OAAQ,GAAIQ,YAAa0B,GA1BvG,EA2BmBpB,mBAASD,GA3B5B,mBA2Bdc,EA3Bc,KA2BAa,EA3BA,KA0CrB,OACE,yBAAKnD,UAAU,aACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,sBACZkD,EACC,6BACE,2CACA,kBAAC,EAAD,CACET,WAAYA,EACZH,aAAcA,EACdE,YAjBM,SAAClC,EAAI8C,GACvBX,GAAW,GAEXf,EAAUzB,EAAOC,KAAI,SAACgB,GAAD,OAAYA,EAAMZ,KAAOA,EAAK8C,EAAelC,UAkB1D,6BACE,0CACA,kBAAC,EAAD,CAAcgB,SA1CT,SAAChB,GAChBA,EAAMZ,GAAKL,EAAOgB,OAAS,EAC3BS,EAAU,GAAD,mBAAKzB,GAAL,CAAaiB,UA4ClB,yBAAKlB,UAAU,sBACb,4CACA,kBAAC,EAAD,CAAcC,OAAQA,EAAQoB,QAnCtB,SAACH,GACjBuB,GAAW,GAETU,EAAgB,CAAE7C,GAAIY,EAAMZ,GAAIC,YAAaW,EAAMX,YAAaC,SAAUU,EAAMV,SAAUC,UAAWS,EAAMT,UAAWC,WAAYQ,EAAMR,WAAYC,OAAQO,EAAMP,OAAQQ,YAAaD,EAAMC,YAAaN,IAAKK,EAAML,OAgC/JS,YA3CpC,SAAChB,GACnBoB,EAAUzB,EAAOoD,QAAO,SAACnC,GAAD,OAAWA,EAAMZ,KAAOA,aCkCrCgD,E,kDA/Cb,WAAYtC,GAAQ,IAAD,8BACjB,cAAMA,IACDuC,MAAQ,CACXC,MAAO,kBACPC,YAAa,CACX,CAACD,MAAO,OAAQE,KAAM,KACtB,CAACF,MAAO,SAAUE,KAAM,WACxB,CAACF,MAAO,OAAQE,KAAM,UAExBC,KAAM,CACJH,MAAO,SACPI,SAAU,SACVC,KAAM,UAERC,OAAQ,CACNN,MAAO,WAfM,E,qDAqBjB,OACE,kBAAC,IAAD,KACE,kBAACO,EAAA,EAAD,CAAW/D,UAAU,MAAMgE,OAAO,GAChC,kBAACC,EAAA,EAAD,CAAQjE,UAAU,gBAAgBkE,GAAG,cAAcC,OAAO,MACxD,kBAACF,EAAA,EAAOG,MAAR,0BAEA,kBAACH,EAAA,EAAOI,OAAR,CAAerE,UAAU,WAAWsE,gBAAc,kBAClD,kBAACL,EAAA,EAAOM,SAAR,CAAiBjE,GAAG,iBAClB,kBAACkE,EAAA,EAAD,CAAKxE,UAAU,WACb,kBAAC,IAAD,CAAMA,UAAU,WAAWyE,GAAG,KAA9B,QACA,kBAAC,IAAD,CAAMzE,UAAU,WAAWyE,GAAG,aAA9B,aAKN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOf,KAAK,IAAIgB,UAAW3E,EAAQ4E,OAAK,IACxC,kBAAC,IAAD,CAAOjB,KAAK,YAAYgB,UAAWhC,W,GAxC7BkC,IAAM9D,WCAJ+D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCTNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.a86c0f5e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport orders from \"../orders.json\";\n\n\nclass Orders extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<main>\n\t\t            <h1 className=\"title\"> Orders List </h1>\n\t\t            <div className=\"sub-heading\">\n\t\t              <div className=\"order-title\"> ID </div>\n\t\t              <div className=\"order-title\"> Products </div>\n\t\t              <div className=\"order-title\"> Quantity </div>\n\t\t              <div className=\"order-title\"> Unit Price </div>\n\t\t              <div className=\"order-title\"> Total Price </div>\n\t\t              <div className=\"order-title\"> Status </div>\n\t\t              <div className=\"order-title\"> Date Ordered </div>\n\t\t              <div className=\"order-title\"> Estimated Arrival </div>\n\t\t            </div>\n\t\t\t\t{\n\t\t            orders.map((item, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div key={i} className=\"orders-container\">\n\t\t\t\t\t\t\t\t<div className=\"order-list\"> {item.id} </div>\n\t\t\t\t\t\t\t\t<div className=\"order-list\"> {item.productName} </div>\n\t\t\t\t\t\t\t\t<div className=\"order-list\"> {item.quantity} </div>\n\t\t\t\t\t\t\t\t<div className=\"order-list\"> PHP {item.unitPrice} </div>\n\t\t\t\t\t\t\t\t<div className=\"order-list\"> PHP {item.totalPrice} </div>\n\t\t\t\t\t\t\t\t<div className=\"order-list\"> {item.status} </div>\n\t\t\t\t\t\t\t\t<div className=\"order-list\"> {item.dateOrdered} </div>\n\t\t\t\t\t\t\t\t<div className=\"order-list\"> {item.eta} </div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t</main>\n\t\t\t</div>\n        );\n\t}\n}\n\nexport default Orders;\n\n\n","import React from 'react'\n\nconst OrderDetails = (props) => (\n  <table>\n    <thead>\n      <tr>\n        <th>Product Name</th>\n        <th>Quantity</th>\n        <th>Unit Price </th>\n        <th>Total Price </th>\n        <th> Status </th>\n        <th>Ordered Date </th>\n        <th> ETA </th>\n        <th>Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n      {props.orders.length > 0 ? (\n        props.orders.map((order) => (\n          <tr key={order.id}>\n            <td>{order.productName}</td>\n            <td>{order.quantity}</td>\n            <td>{order.unitPrice}</td>\n            <td>{order.totalPrice}</td>\n            <td>{order.status} </td>\n            <td>{order.orderedDate}</td>\n            <td>{order.eta} </td>\n            <td>\n              <button\n                onClick={() => {\n                  props.editRow(order)\n                }}\n                className=\"btn muted-button\"\n              >\n                Edit\n              </button>\n              <button\n                onClick={() => props.deleteOrder(order.id)}\n                className=\"btn muted-button\"\n              >\n                Delete\n              </button>\n            </td>\n          </tr>\n        ))\n      ) : (\n        <tr>\n          <td>No Orders</td>\n        </tr>\n      )}\n    </tbody>\n  </table>\n)\n\nexport default OrderDetails;","import React, { useState } from 'react';\n\nconst AddOrderForm = (props) => {\n  const initialFormState = { id: null, productName: '', quantity: '', unitPrice: '', totalPrice: '', status: 'Processing', orderedDate: '', eta: '' }\n  const [order, setOrders] = useState(initialFormState)\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target\n\n    setOrders({ ...order, [name]: value })\n  }\n\n  return (\n    <form\n      onSubmit={(event) => {\n        event.preventDefault()\n        if (!order.productName || !order.quantity || !order.unitPrice || !order.totalPrice || !order.eta) return\n\n        props.addOrder(order)\n        setOrders(initialFormState)\n      }}\n    >\n      <label>Product Name</label>\n      <input\n        className=\"field\"\n        type=\"text\"\n        name=\"productName\"\n        value={order.productName}\n        onChange={handleInputChange}\n      />\n      <label>Quantity</label>\n      <input\n        className=\"field\"\n        type=\"text\"\n        name=\"quantity\"\n        value={order.quantity}\n        onChange={handleInputChange}\n      />\n\n      <label>Unit Price</label>\n      <input\n        className=\"field\"\n        type=\"text\"\n        name=\"unitPrice\"\n        value={order.unitPrice}\n        onChange={handleInputChange}\n      />\n\n      <label>Total Price</label>\n      <input\n        className=\"field\"\n        type=\"text\"\n        name=\"totalPrice\"\n        value={order.totalPrice}\n        onChange={handleInputChange}\n      />\n\n      <label>Ordered Date</label>\n      <input\n        className=\"field\"\n        type=\"date\"\n        name=\"orderedDate\"\n        value={order.orderedDate}\n        onChange={handleInputChange}\n      />\n\n      <label>Estimated Arrival</label>\n      <input\n        className=\"field\"\n        type=\"date\"\n        name=\"eta\"\n        value={order.eta}\n        onChange={handleInputChange}\n      />\n      <button className=\"btn-order\">Add Order</button>\n    </form>\n  )\n}\n\nexport default AddOrderForm;\n\n\n\n","import React, { useState, useEffect } from 'react';\n\nconst EditOrderForm = (props) => {\n  const [order, setOrders] = useState(props.currentOrder)\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target\n\n    setOrders({ ...order, [name]: value })\n  }\n\n  useEffect(() => {\n    setOrders(props.currentOrder)\n  }, [props])\n\n  return (\n    <form\n      onSubmit={(event) => {\n        event.preventDefault()\n\n        props.updateOrder(order.id, order)\n      }}\n    >\n      <label>Product Name</label>\n      <input\n        className=\"field\"\n        type=\"text\"\n        name=\"productName\"\n        value={order.productName}\n        onChange={handleInputChange}\n      />\n      <label>Quantity</label>\n      <input\n        className=\"field\"\n        type=\"text\"\n        name=\"quantity\"\n        value={order.quantity}\n        onChange={handleInputChange}\n      />\n\n      <label>Unit Price</label>\n      <input\n        className=\"field\"\n        type=\"text\"\n        name=\"unitPrice\"\n        value={order.unitPrice}\n        onChange={handleInputChange}\n      />\n\n      <label>Total Price</label>\n      <input\n        className=\"field\"\n        type=\"text\"\n        name=\"totalPrice\"\n        value={order.totalPrice}\n        onChange={handleInputChange}\n      />\n\n      <label>Status</label>\n      <input\n        className=\"field\"\n        type=\"text\"\n        name=\"status\"\n        value={order.status}\n        onChange={handleInputChange}\n      />\n\n      <label>Ordered Date</label>\n      <input\n        className=\"field\"\n        type=\"date\"\n        name=\"orderedDate\"\n        value={order.orderedDate}\n        onChange={handleInputChange}\n      />\n\n      <label>Estimated Arrival</label>\n      <input\n        className=\"field\"\n        type=\"date\"\n        name=\"eta\"\n        value={order.eta}\n        onChange={handleInputChange}\n      />\n\n      <button className=\"btn-update\">Update Order</button>\n      <button\n        onClick={() => props.setEditing(false)}\n        className=\"btn-update muted-button\"\n      >\n        Cancel\n      </button>\n    </form>\n  )\n}\n\nexport default EditOrderForm;\n\n","import React, { useState } from 'react';\nimport OrderDetails from '../OrderDetails';\nimport AddOrderForm from './AddOrderForm';\nimport EditOrderForm from './EditOrderForm';\n\nconst AddOrder = () => {\n\n  var today = new Date(),\n      date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n\n  const ordersData = [\n    { id: 1, productName: 'Mouse', quantity: '5', unitPrice: 'PHP 1000', totalPrice: 'PHP 3000', status: 'Processing', orderedDate: date, eta: \"2020-8-20\" },\n    { id: 2, productName: 'Laptop', quantity: '3', unitPrice: 'PHP 2000', totalPrice: 'PHP 5000', status: 'Processing', orderedDate: date, eta: \"2020-8-25\"},\n    { id: 3, productName: 'Monitor', quantity: '10', unitPrice: 'PHP 1700', totalPrice: 'PHP 6000', status: 'Processing', orderedDate: date, eta: \"2020-8-27\" },\n    { id: 4, productName: 'Mouse', quantity: '5', unitPrice: 'PHP 1000', totalPrice: 'PHP 3000', status: 'Processing', orderedDate: date, eta: \"2020-8-20\" },\n    { id: 5, productName: 'Laptop', quantity: '3', unitPrice: 'PHP 2000', totalPrice: 'PHP 5000', status: 'Processing', orderedDate: date, eta: \"2020-8-25\"},\n    { id: 6, productName: 'Monitor', quantity: '10', unitPrice: 'PHP 1700', totalPrice: 'PHP 6000', status: 'Processing', orderedDate: date, eta: \"2020-8-27\" },\n  ]\n\n  const [orders, setOrders] = useState(ordersData)\n\n  const addOrder = (order) => {\n    order.id = orders.length + 1\n    setOrders([...orders, order])\n  }\n\n  const deleteOrder = (id) => {\n    setOrders(orders.filter((order) => order.id !== id))\n  }\n\n  const [editing, setEditing] = useState(false)\n  const initialFormState = { id: null, productName: '', quantity: '', unitPrice: '', totalPrice: '', status: '', orderedDate: date }\n  const [currentOrder, setCurrentOrder] = useState(initialFormState)\n\n  const editRow = (order) => {\n  setEditing(true)\n\n    setCurrentOrder({ id: order.id, productName: order.productName, quantity: order.quantity, unitPrice: order.unitPrice, totalPrice: order.totalPrice, status: order.status, orderedDate: order.orderedDate, eta: order.eta })\n  }\n\n  const updateOrder = (id, updatedOrder) => {\n    setEditing(false)\n\n    setOrders(orders.map((order) => (order.id === id ? updatedOrder : order)))\n  }\n\n\n  return (\n    <div className=\"container\">\n      <div className=\"order-details\">\n        <div className=\"order-details-list\">\n          {editing ? (\n            <div>\n              <h2>Edit Orders</h2>\n              <EditOrderForm\n                setEditing={setEditing}\n                currentOrder={currentOrder}\n                updateOrder={updateOrder}\n              />\n            </div>\n          ) : (\n            <div>\n              <h3>ADD ORDERS</h3>\n              <AddOrderForm addOrder={addOrder} />\n            </div>\n          )}\n        </div>\n        <div className=\"order-details-list\">\n          <h2>VIEW ORDERS </h2>\n          <OrderDetails orders={orders} editRow={editRow} deleteOrder={deleteOrder} />\n        </div>\n        \n      </div>\n    </div>\n\n\n  )\n}\n\nexport default AddOrder;\n\n\n\n\n","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport './App.css';\n\nimport './styles/Main.scss';\nimport Orders from './components/Orders';\nimport AddOrder from './components/AddOrder'\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'Online Ordering',\n      headerLinks: [\n        {title: 'Home', path: '/'},\n        {title: 'Create', path: '/create'},\n        {title: 'Edit', path: '/edit'}\n      ],\n      home: {\n        title: 'orders',\n        subTitle: 'sample',\n        text: 'sample'\n      },\n      create: {\n        title: 'sample'\n      },\n    }\n  }\n\n  render() {\n    return (\n      <Router>\n        <Container className=\"p-0\" fluid={true}>\n          <Navbar className=\"border-bottom\" bg=\"transparent\" expand=\"lg\">\n            <Navbar.Brand> Online Ordering </Navbar.Brand>\n\n            <Navbar.Toggle className=\"border-0\" aria-controls=\"navbar-toggle\" />\n            <Navbar.Collapse id=\"navbar-toggle\">\n              <Nav className=\"ml-auto\">\n                <Link className=\"nav-link\" to=\"/\">Home</Link>\n                <Link className=\"nav-link\" to=\"/addorder\">Create</Link>\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n\n          <Switch>\n            <Route path='/' component={Orders} exact/>\n            <Route path='/addorder' component={AddOrder} />\n          </Switch>\n        </Container>\n\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}